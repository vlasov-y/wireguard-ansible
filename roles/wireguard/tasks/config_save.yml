- name: "{{ network }} : Create {{ configuration_path }}"
  become: yes
  file:
    state: directory
    path: "{{ configuration_path }}"
    mode: 0700

- name: "{{ network }} : Save settings config"
  become: yes
  copy:
    content: "{{ yaml | to_nice_yaml }}"
    dest: "{{ configuration_path }}/settings.yaml"
    mode: 0400
  register: _settings
  vars:
    yaml:
      port: "{{ port }}"
      private: "{{ wireguard_keys[network].private }}"
      public: "{{ wireguard_keys[network].public }}"
      preshared_keys: "{{ wireguard_preshared_keys }}"
      fwmark: "{{ fwmark }}"
      rt_table: "{{ rt_table }}"
      ipset: "{{ ipset }}"
      proxy_fwmark: "{{ proxy_fwmark }}"

- name: "{{ network }} : Generate wireguard config"
  become: yes
  template:
    src: wireguard.ini
    dest: "{{ configuration_path }}/wireguard.conf"
    mode: 0400
  register: _wireguard

- name: "{{ network }} : Generate new systemctl shell script"
  become: yes
  template:
    src: script.sh
    dest: "{{ configuration_path }}/service.sh.new"
    mode: 0755
  register: _script_new
  changed_when: no

- name: "{{ network }} : Get old script stat"
  become: yes
  stat:
    path: "{{ configuration_path }}/service.sh"
  register: _script_old

- when:
    - _script_old.stat.exists
    - _script_old.stat.checksum != _script_new.checksum
  block:
    - name: "{{ network }} : Stop wireguard interface"
      become: yes
      systemd:
        name: "wireguard@{{ network }}.service"
        enabled: yes
        state: stopped
    
- name: "{{ network }} : Replace old script with the new one"
  become: yes
  copy:
    remote_src: yes
    src: "{{ configuration_path }}/service.sh.new"
    dest: "{{ configuration_path }}/service.sh"
    mode: 0755
    owner: root
    group: root
    
- name: "{{ network }} : Remove new script template file"
  become: yes
  file:
    path: "{{ configuration_path }}/service.sh.new"
    state: absent
  changed_when: no

- name: "{{ network }} : Generate systemd service"
  become: yes
  template:
    src: service.ini
    dest: "/lib/systemd/system/wireguard@.service"
    mode: 0644
  register: _service

- name: "{{ network }} : Set fact _restart_required"
  set_fact:
    _restart_required: yes
  when: _wireguard.changed or
        _service.changed or
        _settings.changed or
        (_script_old.stat.exists and _script_old.stat.checksum != _script_new.checksum)

- name: "{{ network }} : {{ 'Restart' if _restart_required is defined else 'Start' }} wireguard interface"
  become: yes
  systemd:
    name: "wireguard@{{ network }}.service"
    enabled: yes
    state: "{{ 're' if _restart_required is defined }}started"
    daemon_reload: yes
