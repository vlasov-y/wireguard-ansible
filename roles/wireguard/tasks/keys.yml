- name: "Generate preshared key"
  block:
    - name: "Generate new preshared key"
      become: yes
      shell: wg genpsk
      register: _new_preshared_key
      
    - name: "Set fact wireguard_preshared_key"
      set_fact:
        wireguard_preshared_key: "{{ _new_preshared_key.stdout }}"
  when: (network in wireguard_regenerate_keys) or
        (not wireguard_preshared_key)
  run_once: yes

- when: (network not in wireguard_keys) or
        (network in wireguard_regenerate_keys)
  block:
    - name: "{{ network }} : Generate new keys"
      become: yes
      shell: |
        PRIVATE="$(wg genkey)"
        PUBLIC="$(printf "$PRIVATE" | wg pubkey)"
        printf "private: '%s'\npublic: '%s'" "$PRIVATE" "$PUBLIC"
      register: _keys

    - name: "{{ network }} : Set fact wireguard_keys"
      set_fact:
        wireguard_keys: "{{ wireguard_keys | combine({network: {'public': public, 'private': private}}) }}"
      vars:
        public: "{{ _keys.stdout | from_yaml | json_query('public') }}"
        private: "{{ _keys.stdout | from_yaml | json_query('private') }}"

- name: "{{ network }} : Print public keys"
  debug:
    msg: "{{ wireguard_keys | json_query(network + '.public') }}"
