- name: Check wireguard_interface_name_prefix
  fail:
    msg: "wireguard_interface_name_prefix have to start with wg"
  when: wireguard_interface_name_prefix is not match('^wg')

- name: Check no peers
  fail:
    msg: "No peers defined"
  when: wireguard_peers is not defined or not wireguard_peers 

- name: Check no addresses
  fail:
    msg: "No addresses defined"
  when: wireguard_addresses is not defined or not wireguard_addresses

- name: Check unknown networks in wireguard_peers
  fail:
    msg: "Unknown network {{ network }} in wireguard_peers"
  loop: "{{ wireguard_peers.keys() | list }}"
  loop_control:
    loop_var: network
  when: network not in wireguard_networks.keys()

- name: Check unknown networks in wireguard_addresses
  fail:
    msg: "Unknown network {{ network }} in wireguard_addresses"
  loop: "{{ wireguard_addresses.keys() | list }}"
  loop_control:
    loop_var: network
  when: network not in wireguard_networks.keys()

- name: Check unknown networks in wireguard_interfaces
  fail:
    msg: "Unknown network {{ network }} in wireguard_interfaces"
  loop: "{{ wireguard_interfaces.keys() | list }}"
  loop_control:
    loop_var: network
  when: network not in wireguard_networks.keys()

- name: Check address subnet
  fail:
    msg: |
      Address {{ address }} does not belong to subnet {{ subnet }}
      of network {{ network }} for host {{ inventory_hostname }}
  loop: "{{ wireguard_attached_networks }}"
  loop_control:
    loop_var: network
    label: "{{ network }} > {{ address }}"
  vars:
    address: "{{ wireguard_addresses[network][inventory_hostname] }}"
    subnet: "{{ wireguard_networks[network] }}"
  when: not address | ipaddr(subnet)

- name: Check address duplicates
  fail:
    msg: "Duplicate addresses for {{ network }} are defined in wireguard_addresses"
  loop: "{{ wireguard_attached_networks }}"
  loop_control:
    loop_var: network
  when: wireguard_addresses[network].values()|unique|length != wireguard_addresses[network].keys()|length

- name: Check wireguard_ports
  fail:
    msg: "Wireguard cannot listen on {{ port }} for network {{ network }}"
  loop: "{{ wireguard_ports | dict2items }}"
  loop_control:
    label: "{{ item.key }}/{{ item.value }}"
  vars:
    network: "{{ item.key }}"
    port: "{{ item.value }}"
  when:
    - port|string != 'random'
    - (port|int < 1) or (port|int > 65535)

- name: Check wireguard_fwmarks
  fail:
    msg: "Improper fwmark {{ fwmark }} for network {{ network }}"
  loop: "{{ wireguard_fwmarks | dict2items }}"
  loop_control:
    label: "{{ item.key }}/{{ item.value }}"
  vars:
    network: "{{ item.key }}"
    fwmark: "{{ item.value }}"
  when:
    - fwmark|string != 'random'
    - (fwmark|int < 1) or (fwmark|int > 65535)

- name: Check wireguard_ports duplicates
  fail:
    msg: "wireguard_ports has duplicates"
  when: full|length != uniq|length
  vars:
    full: "{{ wireguard_ports.values() | difference(['random']) | list }}"
    uniq: "{{ full | unique }}"

- name: Check wireguard_fwmarks duplicates
  fail:
    msg: "wireguard_fwmarks has duplicates"
  when: full|length != uniq|length
  vars:
    full: "{{ wireguard_fwmarks.values() | difference(['random']) | list }}"
    uniq: "{{ full | unique }}"

- name: Check wireguard_keys
  fail:
    msg: "Wireguard keys for network {{ network }} are not set properly"
  loop: "{{ wireguard_attached_networks }}"
  loop_control:
    loop_var: network
  vars:
    public: "{{ wireguard_keys[network][inventory_hostname].public | default(None) }}"
    private: "{{ wireguard_keys[network][inventory_hostname].private | default(None) }}"
  when: not public or not private

- name: Check wireguard_rt_tables
  fail:
    msg: "wireguard_rt_tables id for network {{ network }} cannot be set to {{ id }}"
  loop: "{{ wireguard_rt_tables | dict2items }}"
  loop_control:
    label: "{{ network }}" 
  when: 
    - id|string != 'random'
    - (id|int < 1) or (id|int > 252)
  vars:
    network: "{{ item.key }}"
    name: "{{ item.value.name | default(None) }}"
    id: "{{ item.value.id | default(None) }}"
